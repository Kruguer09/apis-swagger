// <auto-generated />
using EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240416162437_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Direccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId")
                        .IsUnique();

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("InstitutoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitutoId");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.EstudianteCurso", b =>
                {
                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.HasKey("CursoId", "EstudianteId");

                    b.HasIndex("EstudianteId");

                    b.ToTable("EstudiantesCursos");
                });

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Instituto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Institutos");
                });

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Direccion", b =>
                {
                    b.HasOne("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Estudiante", "Estudiante")
                        .WithOne("Direccion")
                        .HasForeignKey("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Direccion", "EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Estudiante", b =>
                {
                    b.HasOne("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Instituto", "Instituto")
                        .WithMany("Estudiantes")
                        .HasForeignKey("InstitutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituto");
                });

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.EstudianteCurso", b =>
                {
                    b.HasOne("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Curso", "Curso")
                        .WithMany("EstudianteCursos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Estudiante", "Estudiante")
                        .WithMany("EstudianteCursos")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Curso", b =>
                {
                    b.Navigation("EstudianteCursos");
                });

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Estudiante", b =>
                {
                    b.Navigation("Direccion")
                        .IsRequired();

                    b.Navigation("EstudianteCursos");
                });

            modelBuilder.Entity("EF_en_ASP.NET_Core_MVC_con_Scaffolding_y_NN_con_NET_7.Models.Instituto", b =>
                {
                    b.Navigation("Estudiantes");
                });
#pragma warning restore 612, 618
        }
    }
}
